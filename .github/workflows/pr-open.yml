name: Build-and-Test

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.github/**'
  workflow_dispatch: # This allows you to manually trigger the workflow

concurrency:
  # Cancel in progress for PR open and close, but not merge_group
  group: ${{ github.event.number }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    outputs:
      pr-number-output: ${{ steps.set-output.outputs.pr-number }}
      short-commit-hash: ${{ steps.extract-commit-hash.outputs.short-git-sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Extract Git commit hash
        id: extract-commit-hash
        run: echo "short-git-sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set PR number
        id: set-pr-number
        run: echo "pr-number=${{ github.event.number }}" >> $GITHUB_OUTPUT
        
      - name: Login to Artifactory image registry with Docker
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ARTIFACTORY_URL }}
          username: ${{ secrets.ARTIFACTORY_SERVICEACCOUNT_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_SERVICEACCOUNT_PASSWORD }}

      - name: Print Short commit hash
        run: echo "${{ steps.extract-commit-hash.outputs.short-git-sha }}"
        
      - name: Print PR number
        run: echo "${{ steps.set-pr-number.outputs.pr-number }}"

      - name: Print test var
        run: echo "${{ vars.TEST_VAR }}"

      - name: Print all git envs
        run: env

      - name: Print custom PR number
        run: |
          pull_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          echo $pull_number

      - name: Get PR from API
        run: |
          # GitHub CLI api
          # https://cli.github.com/manual/gh_api
          PR=$(gh api /repos/zimimi/simple-python-flask/commits/${{ steps.extract-commit-hash.outputs.short-git-sha }}/pulls)
          echo "$PR"
        env:
          GH_TOKEN: ${{ github.token }}

        

  deploy:
    runs-on: ubuntu-latest
    environment: dev
    needs: build
    steps:
      - name: Print pr number
        run: echo "${{ needs.build.outputs.pr-number }}"
      - name: Print Git commit hash
        run: echo "${{ needs.build.outputs.short-commit-hash }}"
      - name: Download output.txt from Artifactory
        run: |
          curl -v -O \
            --user ${{ secrets.ARTIFACTORY_SERVICEACCOUNT_USERNAME }}:${{ secrets.ARTIFACTORY_SERVICEACCOUNT_PASSWORD }} \
            https://${{ secrets.ARTIFACTORY_URL }}/artifactory/${{ secrets.ARTIFACTORY_REPOSITORY_NAME }}/outputs.txt

      - name: Verify downloaded file
        run: |
          if [ -f "./outputs.txt" ]; then
            echo "File downloaded successfully."
          else
            echo "File download failed."
            exit 1
          fi
      - name: Print outputs.txt
        run: cat outputs.txt
